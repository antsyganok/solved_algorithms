"""
Преобразование одномерного списка в двумерный

У вас есть одномерный список длиной n, содержащий целые числа.

Ваша задача:

Разбить этот список на k вложенных списков,
каждый из которых должен состоять из r элементов.
Гарантируется, что будет выполняться условие: k x r = n

Заполнять вложенный список построчно:
Первый элемент одномерного списка становится первым элементом
первого вложенного списка.
Следующие элементы продолжают заполнять первый вложенный список до тех пор,
пока там не станет r элементов.
Когда первый вложенный список заполнится, переходите к заполнению следующего.
Формат входных данных:

Целое число n (размер списка).
n целых чисел (элементы списка, поданные в одной строке через пробел).
Два целых числа k и r (количество строк и столбцов).
Формат выходных данных:

Один список списков, содержащий k вложенных списков длиной r.

Sample Input 1:
6
1 2 3 4 5 6
2 3
Sample Output 1:
[[1, 2, 3], [4, 5, 6]]

Sample Input 2:
9
1 2 3 4 5 6 7 8 9
3 3
Sample Output 2:
[[1, 2, 3], [4, 5, 6], [7, 8, 9]]
"""

_ = int(input())
nums = list(map(int, input().split()))
long, sect = map(int, input().split())

result = []
idx = 0

for _ in range(long):
    row = []
    for _ in range(sect):
        row.append(nums[idx])
        idx += 1
    result.append(row)

print(result)
