"""
Сортировка слиянием (merge sort)

Есть несколько типов сортировки,
которые используют рекурсию.
Одна из них называется сортировка слиянием

Ваша задача реализовать этот алгоритм.
Для этого нужно будет создать функцию merge_sort,
которая будет принимать исходный список
и возвращать новый отсортированный в порядке неубывания список.

Также для реализации функции merge_sort
вам понадобится реализовать функцию merge_two_list.
Функция merge_two_list должна принимать
два отсортиванных по неубыванию списка,
сливать их в один большой список также
отсортированный по неубыванию и возвращать его.

Ваша задача написать только определение функций merge_sort и merge_two_list,
при этом нельзя пользоваться встроенными сортировками в Python

Sample Input:
7
6 2 19 5 10 7 11
Sample Output:
2 5 6 7 10 11 19
"""

# функция merge_two_list должна объединить два списка


def merge_two_list(a: list, b: list) -> list:
    """слияние двух отсортированных по неубыванию списков"""
    res = []

    while a and b:
        if a[0] >= b[0]:
            res.append(b.pop(0))
        else:
            res.append(a.pop(0))
    res += a + b

    return res


# функция merge_sort должна выполнить сортировку
def merge_sort(s: list) -> list:
    """сортировка слиянием"""
    if len(s) <= 1:
        return s

    mid = len(s) // 2

    l_arr = merge_sort(s[:mid])
    r_arr = merge_sort(s[mid:])

    return merge_two_list(l_arr, r_arr)
